plugins {
    id "me.modmuss50.mod-publish-plugin" version "0.5.1"
}

evaluationDependsOn(":common")
evaluationDependsOn(":fabric")
evaluationDependsOn(":neoforge")

publishMods {
    changelog = rootProject.file("CHANGELOG.md").text
    type = STABLE

    def curseForgeProjectId = "984325"
    def modrinthProjectId = "qbzGjA1u"

    def neoForgeLoaders = [
            "neoforge"
    ]
    def fabricLoaders = [
            "fabric"
    ]
    def neoForgeMCVersions = [
            "1.20.4"
    ]
    def fabricMCVersions = [
            "1.20",
            "1.20.1",
            "1.20.2",
            "1.20.3",
            "1.20.4"
    ]

    curseforge("curseforgeFabric") {
        file = project(":fabric").remapJar.archiveFile
        displayName = "v${rootProject.version} (Fabric ${minecraft_version})"
        version = "${rootProject.version}-fabric"

        accessToken = providers.environmentVariable("CURSEFORGE_TOKEN")
        projectId = curseForgeProjectId
        modLoaders.addAll(fabricLoaders)
        minecraftVersions.addAll(fabricMCVersions)

        requires {
            slug = "fabric-api"
        }
    }

    modrinth("modrinthFabric") {
        file = project(":fabric").remapJar.archiveFile
        displayName = "v${rootProject.version} (Fabric ${minecraft_version})"
        version = "${rootProject.version}-fabric"

        accessToken = providers.environmentVariable("MODRINTH_TOKEN")
        projectId = modrinthProjectId
        modLoaders.addAll(fabricLoaders)
        minecraftVersions.addAll(fabricMCVersions)

        requires {
            slug = "fabric-api"
        }
    }

    curseforge("curseforgeNeoforge") {
        file = project(":neoforge").jar.archiveFile
        displayName = "v${rootProject.version} (NeoForge ${minecraft_version})"
        version = "${rootProject.version}-neoforge"

        accessToken = providers.environmentVariable("CURSEFORGE_TOKEN")
        projectId = curseForgeProjectId
        modLoaders.addAll(neoForgeLoaders)
        minecraftVersions.addAll(neoForgeMCVersions)
    }

    modrinth("modrinthNeoforge") {
        file = project(":neoforge").jar.archiveFile
        displayName = "v${rootProject.version} (NeoForge ${minecraft_version})"
        version = "${rootProject.version}-neoforge"

        accessToken = providers.environmentVariable("MODRINTH_TOKEN")
        projectId = modrinthProjectId
        modLoaders.addAll(neoForgeLoaders)
        minecraftVersions.addAll(neoForgeMCVersions)
    }

    github {
        displayName = "Epileson ${rootProject.version} (${minecraft_version})"
        file = project(":fabric").remapJar.archiveFile
        additionalFiles.from(
                project(":neoforge").jar.archiveFile)

        accessToken = providers.environmentVariable("GITHUB_TOKEN")
        repository = "MerchantPug/epileson"
        commitish = github_committish // This is the branch the release tag will be created from
        tagName = "${rootProject.version}"
    }
}